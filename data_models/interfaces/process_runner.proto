syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.data_models.ProcessRunner";
option java_outer_classname = "ProcessRunnerProto";
option objc_class_prefix = "PR";

package data_models;

// The greeting service definition.
service ProcessRunner {
  // Sends a greeting
  rpc RunProcess (RunProcessRequest) returns (RunProcessResponse) {}
  rpc SignalToStop (SignalToStopRequest) returns (SignalToStopResponse) {}
  rpc IsRunning (IsRunningRequest) returns (IsRunningResponse) {}
  rpc GetLastExitCode (GetLastExitCodeRequest) returns (GetLastExitCodeResponse) {}
  rpc GetId (GetIdRequest) returns (GetIdResponse) {}
  rpc GetCompositeCommand (GetCompositeCommandRequest) returns (GetCompositeCommandResponse) {}
  rpc GetInitialDirectory (GetInitialDirectoryRequest) returns (GetInitialDirectoryResponse) {}
}

// The request message containing the command and arguments.
message RunProcessRequest {
  string command = 1;
  repeated string args = 2;
}

// The response message containing the greetings
message RunProcessResponse {
  int64 key = 1;
  int64 error_code = 2;
  string message = 3;
  int64 exit_code = 4;
}

message SignalToStopRequest {
  int64 key = 1;
}

message SignalToStopResponse {
  int64 key = 1;
  int64 error_code = 2;
}

message IsRunningRequest {
  int64 key = 1;
}

message IsRunningResponse {
  int64 key = 1;
  int64 error_code = 2;
  bool value = 3;
}

message GetLastExitCodeRequest {
  int64 key = 1;
}

message GetLastExitCodeResponse {
  int64 key = 1;
  int64 error_code = 2;
  int64 value = 3;
}

message GetIdRequest {
  int64 key = 1;
}

message GetIdResponse {
  int64 key = 1;
  int64 error_code = 2;
  int64 value = 3;
}

message GetCompositeCommandRequest {
  int64 key = 1;
}

message GetCompositeCommandResponse {
  int64 key = 1;
  int64 error_code = 2;
  string value = 3;
}

message GetInitialDirectoryRequest {
  int64 key = 1;
}

message GetInitialDirectoryResponse {
  int64 key = 1;
  int64 error_code = 2;
  string value = 3;
}
